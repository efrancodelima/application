diff --git a/.github/workflows/pipeline.yml b/.github/workflows/pipeline.yml
index b477d07..d1e7648 100644
--- a/.github/workflows/pipeline.yml
+++ b/.github/workflows/pipeline.yml
@@ -69,15 +69,11 @@ jobs:
       - name: Tag and push docker image
         env:
           AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
-        run: ./s-aws-ecr-push.sh
+        run: ./s2-ecr-push.sh
 
       - name: Logout from Amazon ECR
         if: always() && env.LOGIN_ECR == 'true'
         run: docker logout ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
 
       - name: Deploy on Amazon ECS
-        run: |
-          aws ecs update-service \
-          --cluster lanchonete-ecs-cluster \
-          --service lanchonete-ecs-service \
-          --force-new-deployment
+        run: ./s3-ecs-deploy.sh
diff --git a/.gitignore b/.gitignore
index a056bef..46a486c 100644
--- a/.gitignore
+++ b/.gitignore
@@ -34,4 +34,4 @@ build/
 .vscode/
 
 ### Scripts ###
-s-push-local.sh
+s5-push-local.sh
diff --git a/Dockerfile b/Dockerfile
index cb74122..74da098 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -13,6 +13,6 @@ WORKDIR /app
 COPY target/tech-challenge-*.jar .
 
 ## Script para inicializar a aplicação
-COPY s-run-project.sh .
-RUN chmod +x s-run-project.sh
-CMD ["sh", "-c", "./s-run-project.sh"]
+COPY s1-run-project.sh .
+RUN chmod +x s1-run-project.sh
+CMD ["sh", "-c", "./s1-run-project.sh"]
diff --git a/pom.xml b/pom.xml
index d14424e..fb6bab3 100644
--- a/pom.xml
+++ b/pom.xml
@@ -52,11 +52,6 @@
 			<version>2.15.2</version>
 		</dependency>
 		<!-- Spring -->
-		<dependency>
-			<groupId>org.springframework.boot</groupId>
-			<artifactId>spring-boot-starter-actuator</artifactId>
-			<version>3.3.4</version>
-		</dependency>
 		<dependency>
 			<groupId>org.springframework.boot</groupId>
 			<artifactId>spring-boot-starter-data-jpa</artifactId>
diff --git a/s-aws-ecr-push.sh b/s-aws-ecr-push.sh
deleted file mode 100755
index 7e4ae9d..0000000
--- a/s-aws-ecr-push.sh
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/bin/sh
-# Bourne-Again shell script, ASCII text executable
-
-# Pega a versão do projeto para uma variável de ambiente
-JAVA_HOME="/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.13-11/x64"
-FULL_PATH_IMAGE="${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/app-lanchonete"
-PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
-
-# Verifica se a imagem com a tag já existe na AWS ECR
-EXISTING_IMAGE=$(aws ecr describe-images --repository-name app-lanchonete --image-ids imageTag=$PROJECT_VERSION --query 'imageDetails[0].imageTags' --output text 2>/dev/null)
-
-# Se existe lança um erro e encerra o script
-if [ -n "$EXISTING_IMAGE" ]; then
-    echo "Erro ao fazer o upload da imagem docker para o repositório da Amazon: a versão $PROJECT_VERSION do projeto já existe no repositório ECR."
-    exit 1
-fi
-
-# Faz o upload da imagem docker para a AWS ECR com a tag da versão do projeto
-docker tag app-lanchonete $FULL_PATH_IMAGE:$PROJECT_VERSION
-docker push $FULL_PATH_IMAGE:$PROJECT_VERSION
-
-# Faz o upload da imagem docker para a AWS ECR com a tag latest
-docker tag app-lanchonete $FULL_PATH_IMAGE:latest
-docker push $FULL_PATH_IMAGE:latest
diff --git a/s-run-local.sh b/s-run-local.sh
deleted file mode 100755
index 79c47ea..0000000
--- a/s-run-local.sh
+++ /dev/null
@@ -1,6 +0,0 @@
-#!/bin/bash
-
-export SPRING_PROFILES_ACTIVE="local"
-
-mvn clean install
-java -jar target/tech-challenge-3-v*.jar
\ No newline at end of file
diff --git a/s-run-project.sh b/s-run-project.sh
deleted file mode 100755
index 9e456f4..0000000
--- a/s-run-project.sh
+++ /dev/null
@@ -1,12 +0,0 @@
-#!/bin/sh
-# Bourne-Again shell script, ASCII text executable
-# Encontra e executa o primeiro arquivo .jar no diretorio
-
-JAR_FILE=$(find . -maxdepth 1 -type f -name "*.jar" | head -n 1)
-
-if [ -z "$JAR_FILE" ]; then
-    echo "Nenhum arquivo .jar encontrado."
-else
-    echo "Executando o arquivo: $JAR_FILE"
-    java -jar "$JAR_FILE"
-fi
diff --git a/src/main/java/br/com/fiap/tech_challenge/external_layer/apis/HomeApi.java b/src/main/java/br/com/fiap/tech_challenge/external_layer/apis/HomeApi.java
index bdf42e6..0b1345d 100644
--- a/src/main/java/br/com/fiap/tech_challenge/external_layer/apis/HomeApi.java
+++ b/src/main/java/br/com/fiap/tech_challenge/external_layer/apis/HomeApi.java
@@ -4,6 +4,7 @@ import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.servlet.view.RedirectView;
 
 import jakarta.servlet.http.HttpServletRequest;
 
@@ -15,8 +16,13 @@ public class HomeApi {
     private HttpServletRequest request;
 
     @GetMapping
-    public String redirectToSwagger() {
+    public RedirectView redirectToSwagger() {
         String currentUrl = request.getRequestURL().toString();
-        return "redirect:" + currentUrl + "swagger-ui/index.html";
+        String link = currentUrl.concat("swagger-ui/index.html");
+        
+        if(!link.contains("localhost")){
+            link = link.replace(":8080", "");
+        }
+        return new RedirectView(link);
     }
 }
diff --git a/src/main/resources/application.yml b/src/main/resources/application.yml
index 17362dd..1884618 100644
--- a/src/main/resources/application.yml
+++ b/src/main/resources/application.yml
@@ -1,11 +1,9 @@
+# Profile default
 server:
-  port: 8080
+  port: 80
   servlet:
-    context-path: "/"
+    context-path: /
 spring:
-  config:
-    activate:
-      on-profile: dev
   application:
     name: app-lanchonete
   datasource:
@@ -20,7 +18,14 @@ spring:
       ddl-auto: "update"
       dialect: "org.hibernate.dialect.MySQL8Dialect"
 
-# Configuração do H2 para rodar local
+# Profile para a AWS
+---
+spring:
+  config:
+    activate:
+      on-profile: dev
+
+# Profile local para rodar com o H2
 ---
 spring:
   config:
